{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "DCOL-DST-DataFactoryDAS-WEU"
        },
        "AzureKeyVault1_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://DCOL-DST-KeyVaultDAS-WEU.vault.azure.net/"
        },
        "DASPayments_Audit_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "DASPaymentAuditDataFactoryConnectionString"
        },
        "DASPayments_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "DASPaymentDataFactoryConnectionString"
        },
        "datamart_stagingDB_linkedservices_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "das-at-shared-sql.database.windows.net"
        },
        "datamart_stagingDB_linkedservices_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "das-at-datamgmt-staging-db"
        },
        "datamart_sql_private_endpoint_properties_privateLinkResourceId": {
            "type": "string",
            "defaultValue": "/subscriptions/68208b91-0105-498e-a1bc-40d75596c01a/resourceGroups/das-at-shared-rg/providers/Microsoft.Sql/servers/das-at-shared-sql"
        },
        "datamart_sql_private_endpoint_properties_groupId": {
            "type": "string",
            "defaultValue": "sqlServer"
        },
        "datamart_sql_private_endpoint_properties_fqdns": {
            "type": "array",
            "defaultValue": [
                "das-at-shared-sql.database.windows.net"
            ]
        },
        "shared_sql_private_endpoint_properties_privateLinkResourceId": {
            "type": "string",
            "defaultValue": "/subscriptions/12f72527-6622-45d3-90a4-0a5d3644c45c/resourceGroups/DCOL-DST-SqlServer/providers/Microsoft.Sql/servers/DCOL-DST-sqlserver-weu"
        },
        "shared_sql_private_endpoint_properties_groupId": {
            "type": "string",
            "defaultValue": "sqlServer"
        },
        "shared_sql_private_endpoint_properties_fqdns": {
            "type": "array",
            "defaultValue": [
                "dcol-dst-sqlserver-weu.database.windows.net"
            ]
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/DestPaymentsArchive')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "DASPayments_Audit",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Table_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "Payments2",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().Table_Name",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DASPayments_Audit')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SrcPayments')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "DASPayments",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Table_Name": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "Payments2",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().Table_Name",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/DASPayments')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DataMart')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "datamart_stagingDB_linkedservices",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Table": {
                        "type": "string"
                    },
                    "Schema": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().Schema",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().Table",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/datamart_stagingDB_linkedservices')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DASPayments_Audit')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "AzureKeyVault1",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('DASPayments_Audit_properties_typeProperties_connectionString_secretName')]"
                    }
                },
                "connectVia": {
                    "referenceName": "AzureVNETIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/AzureVNETIntegrationRuntime')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DASPayments')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "AzureKeyVault1",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('DASPayments_properties_typeProperties_connectionString_secretName')]"
                    }
                },
                "connectVia": {
                    "referenceName": "AzureVNETIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/AzureVNETIntegrationRuntime')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/datamart_stagingDB_linkedservices')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "server": "[parameters('datamart_stagingDB_linkedservices_properties_typeProperties_server')]",
                    "database": "[parameters('datamart_stagingDB_linkedservices_properties_typeProperties_database')]",
                    "encrypt": "mandatory",
                    "trustServerCertificate": false,
                    "authenticationType": "SystemAssignedManagedIdentity"
                },
                "connectVia": {
                    "referenceName": "AzureVNETIntegrationRuntime",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/AzureVNETIntegrationRuntime')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/default')]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
            "apiVersion": "2018-06-01",
            "properties": {},
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureVNETIntegrationRuntime')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "West Europe",
                        "dataFlowProperties": {
                            "computeType": "General",
                            "coreCount": 8,
                            "timeToLive": 10,
                            "cleanup": false
                        },
                        "pipelineExternalComputeScaleProperties": {
                            "timeToLive": 60
                        }
                    }
                },
                "managedVirtualNetwork": {
                    "type": "ManagedVirtualNetworkReference",
                    "referenceName": "default"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyPaymentsToArchive')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetAcYrPeriodToCopy",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "IF (CAST(@{pipeline().parameters.IsManualRun} as bit) != CAST(1 as bit))\nBEGIN\n    SELECT AcademicYear,Period\n    FROM payments2.CollectionPeriod\n    WHERE AuditMigrationCompletionDate is null;\nEnd\nElse\nBEGIN\n    SELECT @{pipeline().parameters.AcademicYear} as AcademicYear, @{pipeline().parameters.CollectionPeriod} AS Period\nEND",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SrcPayments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "collectionperiod"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEachAcYrPeriod",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetAcYrPeriodToCopy",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetAcYrPeriodToCopy').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Source-Record-Count",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n\t(SELECT Count(1) FROM Payments2.EarningEvent                          WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS EarningEventCount,\n\t(SELECT Count(1) FROM Payments2.EarningEventPeriod                    WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS EarningEventPeriodCount,\n\t(SELECT Count(1) FROM Payments2.EarningEventPriceEpisode              WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS EarningEventPriceEpisodeCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEvent                         WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventNonPayablePeriod         WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventNonPayablePeriodCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventNonPayablePeriodFailures WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventNonPayablePeriodFailuresCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventPayablePeriod            WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventPayablePeriodCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventPriceEpisode             WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventPriceEpisodeCount,\n\t(SELECT Count(1) FROM Payments2.FundingSourceEvent                    WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS FundingSourceEventCount,\n\t(SELECT Count(1) FROM Payments2.RequiredPaymentEvent                  WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS RequiredPaymentEventCount,\n\t(SELECT Count(1) FROM Payments2.Payment                               WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS PaymentCount,\n\t(SELECT Count(1) FROM Payments2.Job                                   WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS JobCount,\n\t(SELECT Count(1) FROM Payments2.ProviderAdjustmentPayments            WHERE CollectionPeriodName=CONCAT('@{item().AcademicYear}','-R',RIGHT('00'+'@{item().Period}',2))) AS ProviderAdjustmentPaymentsCount\n\t",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SrcPayments",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table_Name": "EarningEvent"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Should-Start-EarningEvent-Archiving",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Source-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Archive-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(\ngreater(activity('Source-Record-Count').output.firstRow.EarningEventcount,activity('Archive-Record-Count').output.firstRow.EarningEventcount),\ngreater(activity('Source-Record-Count').output.firstRow.EarningEventPriceEpisodeCount,activity('Archive-Record-Count').output.firstRow.EarningEventPriceEpisodeCount)),\ngreater(activity('Source-Record-Count').output.firstRow.EarningEventPeriodCount,activity('Archive-Record-Count').output.firstRow.EarningEventPeriodCount))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Archive-EarningEvents",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.EarningEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.EarningEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "Id",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Id",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimSequenceNumber",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimSequenceNumber",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IlrFileName",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "IlrFileName",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "EventType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "EarningEvent"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "EarningEvent"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Delete-EarningEvents-After-Archive-Successful",
                                                "type": "Script",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Archive-EarningEvents",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Archive-EarningEventPeriod",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Archive-EarningEventPriceEpisode",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "0.03:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "linkedServiceName": {
                                                    "referenceName": "DASPayments",
                                                    "type": "LinkedServiceReference"
                                                },
                                                "typeProperties": {
                                                    "scripts": [
                                                        {
                                                            "type": "NonQuery",
                                                            "text": {
                                                                "value": "IF '@{item().Period}' != '13' AND '@{item().Period}' != '14' AND '@{item().Period}' != '1' AND '@{item().Period}' != '2'\nBEGIN\n\nALTER TABLE [Payments2].[EarningEventPeriod] DROP CONSTRAINT [FK_EarningEventPeriod__EarningEvent];\n\nALTER TABLE [Payments2].[EarningEventPriceEpisode] DROP CONSTRAINT [FK_EarningEventPriceEpisode__EarningEvent];\n\nTRUNCATE TABLE [Payments2].[EarningEventPriceEpisode];\nTRUNCATE TABLE [Payments2].[EarningEventPeriod];\nTRUNCATE TABLE [Payments2].[EarningEvent];\n\n\n\nALTER TABLE [Payments2].[EarningEventPriceEpisode]  WITH NOCHECK ADD  CONSTRAINT [FK_EarningEventPriceEpisode__EarningEvent] FOREIGN KEY([EarningEventId])\nREFERENCES [Payments2].[EarningEvent] ([EventId])\nON DELETE CASCADE;\n\nALTER TABLE [Payments2].[EarningEventPriceEpisode] CHECK CONSTRAINT [FK_EarningEventPriceEpisode__EarningEvent];\n\n\nALTER TABLE [Payments2].[EarningEventPeriod]  WITH NOCHECK ADD  CONSTRAINT [FK_EarningEventPeriod__EarningEvent] FOREIGN KEY([EarningEventId])\nREFERENCES [Payments2].[EarningEvent] ([EventId])\nON DELETE CASCADE;\n\nALTER TABLE [Payments2].[EarningEventPeriod] CHECK CONSTRAINT [FK_EarningEventPeriod__EarningEvent];\n\n\nEND;\n\nSELECT 1 as result;",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "name": "Archive-EarningEventPriceEpisode",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.EarningEventPriceEpisode\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.EarningEventPriceEpisode\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice1",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice1",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice2",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice2",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice3",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice3",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice4",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice4",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "StartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "StartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EffectiveTotalNegotiatedPriceStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "EffectiveTotalNegotiatedPriceStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "PlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "ActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "NumberOfInstalments",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "NumberOfInstalments",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "InstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "InstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "CompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Completed",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                },
                                                                "sink": {
                                                                    "name": "Completed",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EmployerContribution",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EmployerContribution",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CompletionHoldBackExemptionCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "CompletionHoldBackExemptionCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgreedPrice",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "AgreedPrice",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CourseStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "CourseStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "EarningEventPriceEpisode"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "EarningEventPriceEpisode"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Archive-EarningEventPeriod",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.EarningEventPeriod\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.EarningEventPeriod\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CensusDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "CensusDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "EarningEventPeriod"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "EarningEventPeriod"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Archive-Record-Count",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "SELECT \n\t(SELECT Count(1) FROM Payments2.EarningEvent                          WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS EarningEventCount,\n\t(SELECT Count(1) FROM Payments2.EarningEventPeriod                    WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS EarningEventPeriodCount,\n\t(SELECT Count(1) FROM Payments2.EarningEventPriceEpisode              WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS EarningEventPriceEpisodeCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEvent                         WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventNonPayablePeriod         WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventNonPayablePeriodCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventNonPayablePeriodFailures WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventNonPayablePeriodFailuresCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventPayablePeriod            WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventPayablePeriodCount,\n\t(SELECT Count(1) FROM Payments2.DataLockEventPriceEpisode             WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS DataLockEventPriceEpisodeCount,\n\t(SELECT Count(1) FROM Payments2.FundingSourceEvent                    WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS FundingSourceEventCount,\n\t(SELECT Count(1) FROM Payments2.RequiredPaymentEvent                  WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS RequiredPaymentEventCount,\n\t(SELECT Count(1) FROM Payments2.Payment                               WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS PaymentCount,\n\t(SELECT Count(1) FROM Payments2.Job                                   WHERE AcademicYear='@{item().AcademicYear}' AND CollectionPeriod='@{item().Period}') AS JobCount,\n\t(SELECT Count(1) FROM Payments2.ProviderAdjustmentPayments            WHERE CollectionPeriodName=CONCAT('@{item().AcademicYear}','-R',RIGHT('00'+'@{item().Period}',2))) AS ProviderAdjustmentPaymentsCount\n\t",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DestPaymentsArchive",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table_Name": "EarningEvent"
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "Should-Start-FundingSourceEvent-Archiving",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Archive-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Source-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(activity('Source-Record-Count').output.firstRow.FundingSourceEventCount,activity('Archive-Record-Count').output.firstRow.FundingSourceEventCount)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Archive-FundingSourceEvent",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.FundingSourceEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.FundingSourceEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RequiredPaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "RequiredPaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ClawbackSourcePaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "ClawbackSourcePaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FundingSourceType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "FundingSourceType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "AccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransferSenderAccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransferSenderAccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsPlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsPlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsCompletionStatus",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsCompletionStatus",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsCompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsCompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsInstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsInstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsNumberOfInstalments",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsNumberOfInstalments",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "NonPaymentReason",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "NonPaymentReason",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "FundingSourceEvent"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "FundingSourceEvent"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Delete-FundingSourceEvent-after-Archive-Successful",
                                                "type": "Script",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Archive-FundingSourceEvent",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "linkedServiceName": {
                                                    "referenceName": "DASPayments",
                                                    "type": "LinkedServiceReference"
                                                },
                                                "typeProperties": {
                                                    "scripts": [
                                                        {
                                                            "type": "Query",
                                                            "text": {
                                                                "value": "IF '@{item().Period}' != '13' AND '@{item().Period}' != '14' AND '@{item().Period}' != '1' AND '@{item().Period}' != '2'\nBEGIN\n\nTRUNCATE TABLE [Payments2].[FundingSourceEvent]\n\nEND",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Should-Start-RequiredPayment-Archiving",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Source-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Archive-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(activity('Source-Record-Count').output.firstRow.RequiredPaymentEventCount,activity('Archive-Record-Count').output.firstRow.RequiredPaymentEventCount)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Archive-RequiredPaymentEvent",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.RequiredPaymentEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.RequiredPaymentEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ClawbackSourcePaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "ClawbackSourcePaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "AccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransferSenderAccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransferSenderAccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsPlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsPlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsCompletionStatus",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsCompletionStatus",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsCompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsCompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsInstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsInstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsNumberOfInstalments",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsNumberOfInstalments",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "NonPaymentReason",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "NonPaymentReason",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "EventType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "RequiredPaymentEvent"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "RequiredPaymentEvent"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Should-Start-DataLockEvent-Archiving",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Source-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Archive-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(or(or(or(\ngreater(activity('Source-Record-Count').output.firstRow.DataLockEventCount,activity('Archive-Record-Count').output.firstRow.DataLockEventCount),\ngreater(activity('Source-Record-Count').output.firstRow.DataLockEventNonPayablePeriodCount,activity('Archive-Record-Count').output.firstRow.DataLockEventNonPayablePeriodCount)),\ngreater(activity('Source-Record-Count').output.firstRow.DataLockEventNonPayablePeriodFailuresCount,activity('Archive-Record-Count').output.firstRow.DataLockEventNonPayablePeriodFailuresCount)),\ngreater(activity('Source-Record-Count').output.firstRow.DataLockEventPayablePeriodCount,activity('Archive-Record-Count').output.firstRow.DataLockEventPayablePeriodCount)),\ngreater(activity('Source-Record-Count').output.firstRow.DataLockEventPriceEpisodeCount,activity('Archive-Record-Count').output.firstRow.DataLockEventPriceEpisodeCount))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Archive-DataLockEvents",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.DataLockEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.DataLockEvent\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "Id",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Id",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IsPayable",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                },
                                                                "sink": {
                                                                    "name": "IsPayable",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DataLockSourceId",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLockSourceId",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEvent"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEvent"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Delete-DataLockEvents-After-Archive-Successful",
                                                "type": "Script",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Archive-DataLockEvents",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Archive-DataLockEventPayablePeriod",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Archive-DataLockEventsPriceEpisode",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Archive-DataLockEventNonPayablePeriod",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Archive-DataLockEventNonPayablePeriodFailures",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "0.03:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "linkedServiceName": {
                                                    "referenceName": "DASPayments",
                                                    "type": "LinkedServiceReference"
                                                },
                                                "typeProperties": {
                                                    "scripts": [
                                                        {
                                                            "type": "NonQuery",
                                                            "text": {
                                                                "value": "IF '@{item().Period}' != '13' AND '@{item().Period}' != '14' AND '@{item().Period}' != '1' AND '@{item().Period}' != '2'\nBEGIN\n\nALTER TABLE [Payments2].[DataLockEventNonPayablePeriodFailures] DROP CONSTRAINT [FK_DataLockEventNonPayablePeriodFailures__DataLockEventNonPayablePeriod];\n\nALTER TABLE [Payments2].[DataLockEventNonPayablePeriod] DROP CONSTRAINT [FK_DataLockEventNonPayablePeriod__DataLockEvent]\n\nALTER TABLE [Payments2].[DataLockEventPayablePeriod] DROP CONSTRAINT [FK_DataLockEventPayablePeriod__DataLockEvent]\n\nALTER TABLE [Payments2].[DataLockEventPriceEpisode] DROP CONSTRAINT [FK_DataLockEventPriceEpisode__DataLockEvent]\n\nTRUNCATE TABLE [Payments2].[DataLockEventNonPayablePeriodFailures]\nTRUNCATE TABLE [Payments2].[DataLockEventNonPayablePeriod]\nTRUNCATE TABLE [Payments2].[DataLockEventPayablePeriod]\nTRUNCATE TABLE [Payments2].[DataLockEventPriceEpisode]\nTRUNCATE TABLE [Payments2].[DataLockEvent]\n\n\nALTER TABLE [Payments2].[DataLockEventPriceEpisode]  WITH NOCHECK ADD  CONSTRAINT [FK_DataLockEventPriceEpisode__DataLockEvent] FOREIGN KEY([DataLockEventId])\nREFERENCES [Payments2].[DataLockEvent] ([EventId])\nON DELETE CASCADE\n\nALTER TABLE [Payments2].[DataLockEventPriceEpisode] CHECK CONSTRAINT [FK_DataLockEventPriceEpisode__DataLockEvent]\n\nALTER TABLE [Payments2].[DataLockEventPayablePeriod]  WITH NOCHECK ADD  CONSTRAINT [FK_DataLockEventPayablePeriod__DataLockEvent] FOREIGN KEY([DataLockEventId])\nREFERENCES [Payments2].[DataLockEvent] ([EventId])\nON DELETE CASCADE\n\nALTER TABLE [Payments2].[DataLockEventPayablePeriod] CHECK CONSTRAINT [FK_DataLockEventPayablePeriod__DataLockEvent]\n\nALTER TABLE [Payments2].[DataLockEventNonPayablePeriod]  WITH NOCHECK ADD  CONSTRAINT [FK_DataLockEventNonPayablePeriod__DataLockEvent] FOREIGN KEY([DataLockEventId])\nREFERENCES [Payments2].[DataLockEvent] ([EventId])\nON DELETE CASCADE\n\nALTER TABLE [Payments2].[DataLockEventNonPayablePeriod] CHECK CONSTRAINT [FK_DataLockEventNonPayablePeriod__DataLockEvent]\n\nALTER TABLE [Payments2].[DataLockEventNonPayablePeriodFailures]  WITH NOCHECK ADD  CONSTRAINT [FK_DataLockEventNonPayablePeriodFailures__DataLockEventNonPayablePeriod] FOREIGN KEY([DataLockEventNonPayablePeriodId])\nREFERENCES [Payments2].[DataLockEventNonPayablePeriod] ([DataLockEventNonPayablePeriodId])\nON DELETE CASCADE;\n\nALTER TABLE [Payments2].[DataLockEventNonPayablePeriodFailures] CHECK CONSTRAINT [FK_DataLockEventNonPayablePeriodFailures__DataLockEventNonPayablePeriod];\n\nEND",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "name": "Archive-DataLockEventsPriceEpisode",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.DataLockEventPriceEpisode\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.DataLockEventPriceEpisode\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "DataLockEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLockEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice1",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice1",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice2",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice2",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice3",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice3",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TotalNegotiatedPrice4",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "TotalNegotiatedPrice4",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "StartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "StartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EffectiveTotalNegotiatedPriceStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "EffectiveTotalNegotiatedPriceStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "PlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "ActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "NumberOfInstalments",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "NumberOfInstalments",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "InstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "InstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "CompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Completed",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                },
                                                                "sink": {
                                                                    "name": "Completed",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EmployerContribution",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EmployerContribution",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CompletionHoldBackExemptionCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "CompletionHoldBackExemptionCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventPriceEpisode"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventPriceEpisode"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Archive-DataLockEventPayablePeriod",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.DataLockEventPayablePeriod\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.DataLockEventPayablePeriod\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "DataLockEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLockEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventPayablePeriod"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventPayablePeriod"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Archive-DataLockEventNonPayablePeriod",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.DataLockEventNonPayablePeriod\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.DataLockEventNonPayablePeriod\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "DataLockEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLockEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DataLockEventNonPayablePeriodId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLockEventNonPayablePeriodId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventNonPayablePeriod"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventNonPayablePeriod"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Archive-DataLockEventNonPayablePeriodFailures",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.DataLockEventNonPayablePeriodFailures\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.DataLockEventNonPayablePeriodFailures\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "DataLockEventNonPayablePeriodId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLockEventNonPayablePeriodId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DataLockFailureId",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLockFailureId",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventNonPayablePeriodFailures"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "DataLockEventNonPayablePeriodFailures"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Should-Start-Payment-Archiving",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Source-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Archive-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(activity('Source-Record-Count').output.firstRow.PaymentCount,activity('Archive-Record-Count').output.firstRow.PaymentCount)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Archive-Payments",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.Payment\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.Payment\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FundingSourceEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "FundingSourceEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "RequiredPaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "RequiredPaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ClawbackSourcePaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "ClawbackSourcePaymentEventId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "EventTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "DeliveryPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerReferenceNumber",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerUln",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PriceEpisodeIdentifier",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimReference",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimProgrammeType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimStandardCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFrameworkCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimPathwayCode",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ContractType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransactionType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "FundingSource",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "FundingSource",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "IlrSubmissionDateTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "SfaContributionPercentage",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "AgreementId",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "AccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "TransferSenderAccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "TransferSenderAccountId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsPlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsPlannedEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsActualEndDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsCompletionStatus",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsCompletionStatus",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsCompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsCompletionAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsInstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsInstalmentAmount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EarningsNumberOfInstalments",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "EarningsNumberOfInstalments",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningStartDate",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime2"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipPriceEpisodeId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "ApprenticeshipEmployerType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "ReportingAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "ReportingAimFundingLineType",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "NonPaymentReason",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "NonPaymentReason",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "DuplicateNumber",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearningAimSequenceNumber",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "LearningAimSequenceNumber",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "AgeAtStartOfLearning",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "Payment"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "Payment"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set-Audit-Migration-Completion-Date",
                                    "type": "Script",
                                    "dependsOn": [
                                        {
                                            "activity": "Should-Start-EarningEvent-Archiving",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Should-Start-Payment-Archiving",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Should-Start-DataLockEvent-Archiving",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Should-Start-RequiredPayment-Archiving",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Should-Start-FundingSourceEvent-Archiving",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Should-Start-Job-Archiving",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Should-Start-ProviderAdjustmentPayments-Archiving",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "linkedServiceName": {
                                        "referenceName": "DASPayments",
                                        "type": "LinkedServiceReference"
                                    },
                                    "typeProperties": {
                                        "scripts": [
                                            {
                                                "type": "NonQuery",
                                                "text": {
                                                    "value": "IF (CAST(@{pipeline().parameters.IsManualRun} as bit) != CAST(1 as bit))\nBEGIN\n    UPDATE [payments2].[collectionperiod]\n    SET [AuditMigrationCompletionDate]=getdate()\n    WHERE [AcademicYear]='@{item().AcademicYear}'\n    AND [Period]='@{item().Period}'\nEND",
                                                    "type": "Expression"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Should-Start-Job-Archiving",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Archive-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Source-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(activity('Source-Record-Count').output.firstRow.JobCount,activity('Archive-Record-Count').output.firstRow.JobCount)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Archive-Job",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.Job\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.Job\nWHERE AcademicYear='@{item().AcademicYear}'\nand CollectionPeriod='@{item().Period}'",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "JobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "JobType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "JobType",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "StartTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "StartTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "EndTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "EndTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Status",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "Status",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "CreationDate",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DCJobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "DCJobId",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "IlrSubmissionTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                },
                                                                "sink": {
                                                                    "name": "IlrSubmissionTime",
                                                                    "type": "DateTime",
                                                                    "physicalType": "datetime"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "LearnerCount",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "LearnerCount",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                },
                                                                "sink": {
                                                                    "name": "AcademicYear",
                                                                    "type": "Int16",
                                                                    "physicalType": "smallint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriod",
                                                                    "type": "Byte",
                                                                    "physicalType": "tinyint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DataLocksCompletionTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "DataLocksCompletionTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DCJobSucceeded",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                },
                                                                "sink": {
                                                                    "name": "DCJobSucceeded",
                                                                    "type": "Boolean",
                                                                    "physicalType": "bit"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "DCJobEndTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                },
                                                                "sink": {
                                                                    "name": "DCJobEndTime",
                                                                    "type": "DateTimeOffset",
                                                                    "physicalType": "datetimeoffset"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "Job"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "Job"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Should-Start-ProviderAdjustmentPayments-Archiving",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Source-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "Archive-Record-Count",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(activity('Source-Record-Count').output.firstRow.ProviderAdjustmentPaymentsCount,activity('Archive-Record-Count').output.firstRow.ProviderAdjustmentPaymentsCount)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Archive-ProviderAdjustmentPayments",
                                                "type": "Copy",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderQuery": {
                                                            "value": "SELECT *\nFROM Payments2.ProviderAdjustmentPayments\nWHERE CollectionPeriodName=CONCAT('@{item().AcademicYear}','-R',RIGHT('00'+'@{item().Period}',2))",
                                                            "type": "Expression"
                                                        },
                                                        "queryTimeout": "02:00:00",
                                                        "partitionOption": "None"
                                                    },
                                                    "sink": {
                                                        "type": "AzureSqlSink",
                                                        "preCopyScript": {
                                                            "value": "DELETE\nFROM Payments2.ProviderAdjustmentPayments\nWHERE CollectionPeriodName=CONCAT('@{item().AcademicYear}','-R',RIGHT('00'+'@{item().Period}',2))",
                                                            "type": "Expression"
                                                        },
                                                        "writeBehavior": "insert",
                                                        "sqlWriterUseTableLock": false,
                                                        "disableMetricsCollection": false
                                                    },
                                                    "enableStaging": false,
                                                    "translator": {
                                                        "type": "TabularTranslator",
                                                        "mappings": [
                                                            {
                                                                "source": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                },
                                                                "sink": {
                                                                    "name": "Ukprn",
                                                                    "type": "Int64",
                                                                    "physicalType": "bigint"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SubmissionId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                },
                                                                "sink": {
                                                                    "name": "SubmissionId",
                                                                    "type": "Guid",
                                                                    "physicalType": "uniqueidentifier"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SubmissionCollectionPeriod",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "SubmissionCollectionPeriod",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "SubmissionAcademicYear",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "SubmissionAcademicYear",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PaymentType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "PaymentType",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "PaymentTypeName",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                },
                                                                "sink": {
                                                                    "name": "PaymentTypeName",
                                                                    "type": "String",
                                                                    "physicalType": "nvarchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                },
                                                                "sink": {
                                                                    "name": "Amount",
                                                                    "type": "Decimal",
                                                                    "physicalType": "decimal",
                                                                    "scale": 5,
                                                                    "precision": 15
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriodName",
                                                                    "type": "String",
                                                                    "physicalType": "varchar"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriodName",
                                                                    "type": "String",
                                                                    "physicalType": "varchar"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriodMonth",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriodMonth",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            },
                                                            {
                                                                "source": {
                                                                    "name": "CollectionPeriodYear",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                },
                                                                "sink": {
                                                                    "name": "CollectionPeriodYear",
                                                                    "type": "Int32",
                                                                    "physicalType": "int"
                                                                }
                                                            }
                                                        ],
                                                        "typeConversion": true,
                                                        "typeConversionSettings": {
                                                            "allowDataTruncation": true,
                                                            "treatBooleanAsNumber": false
                                                        }
                                                    }
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SrcPayments",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "ProviderAdjustmentPayments"
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "DestPaymentsArchive",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "Table_Name": "ProviderAdjustmentPayments"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Archive-Apprenticeship",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachAcYrPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM Payments2.Apprenticeship",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "TRUNCATE TABLE Payments2.Apprenticeship",
                                    "type": "Expression"
                                },
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "AccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AgreementId",
                                            "type": "String",
                                            "physicalType": "char"
                                        },
                                        "sink": {
                                            "name": "AgreementId",
                                            "type": "String",
                                            "physicalType": "char"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AgreedOnDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        },
                                        "sink": {
                                            "name": "AgreedOnDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Uln",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Uln",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Ukprn",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Ukprn",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EstimatedStartDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        },
                                        "sink": {
                                            "name": "EstimatedStartDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EstimatedEndDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        },
                                        "sink": {
                                            "name": "EstimatedEndDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Priority",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "Priority",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StandardCode",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "StandardCode",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProgrammeType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "ProgrammeType",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "FrameworkCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "FrameworkCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PathwayCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        },
                                        "sink": {
                                            "name": "PathwayCode",
                                            "type": "Int32",
                                            "physicalType": "int"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "LegalEntityName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        },
                                        "sink": {
                                            "name": "LegalEntityName",
                                            "type": "String",
                                            "physicalType": "nvarchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TransferSendingEmployerAccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "TransferSendingEmployerAccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StopDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        },
                                        "sink": {
                                            "name": "StopDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Status",
                                            "type": "Byte",
                                            "physicalType": "tinyint"
                                        },
                                        "sink": {
                                            "name": "Status",
                                            "type": "Byte",
                                            "physicalType": "tinyint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsLevyPayer",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsLevyPayer",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreationDate",
                                            "type": "DateTimeOffset",
                                            "physicalType": "datetimeoffset"
                                        },
                                        "sink": {
                                            "name": "CreationDate",
                                            "type": "DateTimeOffset",
                                            "physicalType": "datetimeoffset"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ApprenticeshipEmployerType",
                                            "type": "Byte",
                                            "physicalType": "tinyint"
                                        },
                                        "sink": {
                                            "name": "ApprenticeshipEmployerType",
                                            "type": "Byte",
                                            "physicalType": "tinyint"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SrcPayments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "Apprenticeship"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestPaymentsArchive",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "Apprenticeship"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Archive-ApprenticeshipPause",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachAcYrPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM Payments2.ApprenticeshipPause",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "TRUNCATE TABLE Payments2.ApprenticeshipPause",
                                    "type": "Expression"
                                },
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ApprenticeshipId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "ApprenticeshipId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PauseDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        },
                                        "sink": {
                                            "name": "PauseDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResumeDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        },
                                        "sink": {
                                            "name": "ResumeDate",
                                            "type": "DateTime",
                                            "physicalType": "date"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SrcPayments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "ApprenticeshipPause"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestPaymentsArchive",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "ApprenticeshipPause"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Archive-ApprenticeshipDuplicate",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachAcYrPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM Payments2.ApprenticeshipDuplicate",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "TRUNCATE TABLE Payments2.ApprenticeshipDuplicate",
                                    "type": "Expression"
                                },
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ApprenticeshipId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "ApprenticeshipId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Ukprn",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Ukprn",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Uln",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Uln",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SrcPayments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "ApprenticeshipDuplicate"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestPaymentsArchive",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "ApprenticeshipDuplicate"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Archive-ApprenticeshipPriceEpisode",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachAcYrPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM Payments2.ApprenticeshipPriceEpisode",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "TRUNCATE TABLE Payments2.ApprenticeshipPriceEpisode",
                                    "type": "Expression"
                                },
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SrcPayments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "ApprenticeshipPriceEpisode"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestPaymentsArchive",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "ApprenticeshipPriceEpisode"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Archive-LevyAccount",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachAcYrPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM Payments2.LevyAccount",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "TRUNCATE TABLE Payments2.LevyAccount",
                                    "type": "Expression"
                                },
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "AccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        },
                                        "sink": {
                                            "name": "AccountName",
                                            "type": "String",
                                            "physicalType": "varchar"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Balance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "Balance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsLevyPayer",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsLevyPayer",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TransferAllowance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "TransferAllowance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SrcPayments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "LevyAccount"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestPaymentsArchive",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "LevyAccount"
                                }
                            }
                        ]
                    },
                    {
                        "name": "Archive-LevyAccountAudit",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachAcYrPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM Payments2.LevyAccountAudit",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "TRUNCATE TABLE Payments2.LevyAccountAudit",
                                    "type": "Expression"
                                },
                                "writeBehavior": "insert",
                                "sqlWriterUseTableLock": false,
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "Id",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        },
                                        "sink": {
                                            "name": "AccountId",
                                            "type": "Int64",
                                            "physicalType": "bigint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AcademicYear",
                                            "type": "Int16",
                                            "physicalType": "smallint"
                                        },
                                        "sink": {
                                            "name": "AcademicYear",
                                            "type": "Int16",
                                            "physicalType": "smallint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CollectionPeriod",
                                            "type": "Byte",
                                            "physicalType": "tinyint"
                                        },
                                        "sink": {
                                            "name": "CollectionPeriod",
                                            "type": "Byte",
                                            "physicalType": "tinyint"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SourceLevyAccountBalance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "SourceLevyAccountBalance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AdjustedLevyAccountBalance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "AdjustedLevyAccountBalance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SourceTransferAllowance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "SourceTransferAllowance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AdjustedTransferAllowance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        },
                                        "sink": {
                                            "name": "AdjustedTransferAllowance",
                                            "type": "Decimal",
                                            "physicalType": "decimal",
                                            "scale": 4,
                                            "precision": 18
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsLevyPayer",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        },
                                        "sink": {
                                            "name": "IsLevyPayer",
                                            "type": "Boolean",
                                            "physicalType": "bit"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CreationDate",
                                            "type": "DateTimeOffset",
                                            "physicalType": "datetimeoffset"
                                        },
                                        "sink": {
                                            "name": "CreationDate",
                                            "type": "DateTimeOffset",
                                            "physicalType": "datetimeoffset"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SrcPayments",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "LevyAccountAudit"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DestPaymentsArchive",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table_Name": "LevyAccountAudit"
                                }
                            }
                        ]
                    },
                    {
                        "name": "ForEachAcYrPeriodForDatamartLoad",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Archive-Apprenticeship",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Archive-ApprenticeshipPause",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Archive-ApprenticeshipDuplicate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Archive-ApprenticeshipPriceEpisode",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Archive-LevyAccount",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Archive-LevyAccountAudit",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetAcYrPeriodToCopy').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "LoadPaymentsToDataMart",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "LoadPaymentsToDataMgmt",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "AcademicYear": {
                                                "value": "@{item().AcademicYear}",
                                                "type": "Expression"
                                            },
                                            "CollectionPeriod": {
                                                "value": "@{item().Period}",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "CollectionPeriod": {
                        "type": "int",
                        "defaultValue": -1
                    },
                    "AcademicYear": {
                        "type": "int",
                        "defaultValue": -1
                    },
                    "IsManualRun": {
                        "type": "int",
                        "defaultValue": 1
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-10-28T13:59:13Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SrcPayments')]",
                "[concat(variables('factoryId'), '/datasets/DestPaymentsArchive')]",
                "[concat(variables('factoryId'), '/linkedServices/DASPayments')]",
                "[concat(variables('factoryId'), '/pipelines/LoadPaymentsToDataMgmt')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LoadPaymentsToDataMgmt')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GenerateRunId",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[GenerateRunId]",
                            "storedProcedureParameters": {
                                "PipelineName": {
                                    "value": "LoadPaymentsToDataMgmt",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "datamart_stagingDB_linkedservices",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "GetDASPaymentsMetadataFull",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "SetRunId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select *  FROM [Mgmt].[Config_StgPmnts] where LoadType = 'Full' and SourceDBName = 'DASPayments'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DataMart",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table": "test",
                                    "Schema": "test"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEachPaymentsTable_FullLoad",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetDASPaymentsMetadataFull",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDASPaymentsMetadataFull').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "PaymentsTableFullLoad",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "LogStartOfPaymentsTableFullLoad",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('select ',item().ColumnsToInclude,' from ',item().SourceTable,' ', replace(replace(item().WhereClause,'ParamAcademicYear',pipeline().parameters.AcademicYear),'ParamCollectionPeriod',pipeline().parameters.CollectionPeriod))",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "preCopyScript": {
                                                "value": "TRUNCATE TABLE @{concat(item().DestSchema,'.',item().DestTable)}",
                                                "type": "Expression"
                                            },
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": true,
                                            "tableOption": {
                                                "value": "@{item().DestTable}",
                                                "type": "Expression"
                                            },
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SrcPayments",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table_Name": "PaymentsFull"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": {
                                                    "value": "@item().DestTable",
                                                    "type": "Expression"
                                                },
                                                "Schema": {
                                                    "value": "@item().DestSchema",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "LogStartOfPaymentsTableFullLoad",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n            @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'Pyaments Table Full Load -'+'@{item().SourceTable}'\n\t   ,getdate()\n\t   ,0\nSELECT 'N/A'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsTableFullLoad_Success",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "PaymentsTableFullLoad",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='Payments Table Full Load -'+'@{item().SourceTable}'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsTableFullLoad_Fail",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "PaymentsTableFullLoad",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertLogErrorDetails]",
                                        "storedProcedureParameters": {
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@{activity('PaymentsTableFullLoad').Error.message}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "RunId": {
                                                "value": {
                                                    "value": "@variables('RunId')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "TaskType": {
                                                "value": {
                                                    "value": "Payments Table Full Load -'+'@{item().SourceTable}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "datamart_stagingDB_linkedservices",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetDASPaymentsMetadataIncremental",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "SetRunId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select *  FROM [Mgmt].[Config_StgPmnts] where LoadType = 'Incremental' and SourceDBName = 'DASPayments'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DataMart",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table": "test",
                                    "Schema": "test"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEachPaymentsTable_Incremental",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetDASPaymentsMetadataIncremental",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDASPaymentsMetadataIncremental').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "PaymentsIncremental",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "LogStartOfPaymentsTableIncrementalLoad",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('select ',item().ColumnsToInclude,' from ',item().SourceTable,' ', replace(replace(item().WhereClause,'ParamAcademicYear',pipeline().parameters.AcademicYear),'ParamCollectionPeriod',pipeline().parameters.CollectionPeriod))",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "preCopyScript": {
                                                "value": "TRUNCATE TABLE @{concat(item().DestSchema,'.',item().DestTable)}",
                                                "type": "Expression"
                                            },
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": true,
                                            "tableOption": {
                                                "value": "@{item().DestTable}",
                                                "type": "Expression"
                                            },
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SrcPayments",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table_Name": "PaymentsIncremental"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": {
                                                    "value": "@item().DestTable",
                                                    "type": "Expression"
                                                },
                                                "Schema": {
                                                    "value": "@item().DestSchema",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IncrementalLoad",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "PaymentsIncremental",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@item().MergeStoredProcedure",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "AcademicYear": {
                                                "value": {
                                                    "value": "@pipeline().parameters.AcademicYear",
                                                    "type": "Expression"
                                                },
                                                "type": "Int16"
                                            },
                                            "CollectionPeriod": {
                                                "value": {
                                                    "value": "@pipeline().parameters.CollectionPeriod",
                                                    "type": "Expression"
                                                },
                                                "type": "Int16"
                                            },
                                            "RunId": {
                                                "value": {
                                                    "value": "@variables('RunId')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "datamart_stagingDB_linkedservices",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "LogStartOfPaymentsTableIncrementalLoad",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n            @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'Pyaments Table Incremental Load -'+'@{item().SourceTable}'\n\t   ,getdate()\n\t   ,0\nSELECT 'N/A'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsTableIncrementalLoad_Success",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "IncrementalLoad",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='Payments Table Incremental Load -'+'@{item().SourceTable}'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsTableIncrementalLoad_Fail",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "IncrementalLoad",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertLogErrorDetails]",
                                        "storedProcedureParameters": {
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@{activity('PaymentsIncremental').Error.message}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "RunId": {
                                                "value": {
                                                    "value": "@variables('RunId')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "TaskType": {
                                                "value": {
                                                    "value": "Payments Table Incremental Load -'+'@{item().SourceTable}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "datamart_stagingDB_linkedservices",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetDASPaymentsAuditMetadataFull",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "SetRunId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select *  FROM [Mgmt].[Config_StgPmnts] where LoadType = 'Full' and SourceDBName = 'DASPayments_Audit'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DataMart",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table": "test",
                                    "Schema": "test"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "GetDASPaymentsAuditMetadataIncremental",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "SetRunId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "select *  FROM [Mgmt].[Config_StgPmnts] where LoadType = 'Incremental' and SourceDBName = 'DASPayments_Audit'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DataMart",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table": "test",
                                    "Schema": "test"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEachPaymentsAudit_FullLoad",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetDASPaymentsAuditMetadataFull",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDASPaymentsAuditMetadataFull').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "PaymentsAudit_Full",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "LogStartOfPaymentsAuditTableFullLoad",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('select ',item().ColumnsToInclude,' from ',item().SourceTable,' ', replace(replace(item().WhereClause,'ParamAcademicYear',pipeline().parameters.AcademicYear),'ParamCollectionPeriod',pipeline().parameters.CollectionPeriod))",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "preCopyScript": {
                                                "value": "TRUNCATE TABLE @{concat(item().DestSchema,'.',item().DestTable)}",
                                                "type": "Expression"
                                            },
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": true,
                                            "tableOption": {
                                                "value": "@{item().DestTable}",
                                                "type": "Expression"
                                            },
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DestPaymentsArchive",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table_Name": "PaymentsAudit"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": {
                                                    "value": "@item().DestTable",
                                                    "type": "Expression"
                                                },
                                                "Schema": {
                                                    "value": "@item().DestSchema",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "LogStartOfPaymentsAuditTableFullLoad",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n            @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'Pyaments Audit Table Full Load -'+'@{item().SourceTable}'\n\t   ,getdate()\n\t   ,0\nSELECT 'N/A'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsAuditTableFullLoad_Success",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "PaymentsAudit_Full",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='Payments Audit Table Full Load -'+'@{item().SourceTable}'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsAuditTableFullLoad_Fail",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "PaymentsAudit_Full",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertLogErrorDetails]",
                                        "storedProcedureParameters": {
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@{activity('PaymentsAudit_Full').Error.message}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "RunId": {
                                                "value": {
                                                    "value": "@variables('RunId')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "TaskType": {
                                                "value": {
                                                    "value": "Payments Audit Table Full Load -'+'@{item().SourceTable}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "datamart_stagingDB_linkedservices",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ForEachPaymentsAudit_Incremental",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetDASPaymentsAuditMetadataIncremental",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetDASPaymentsAuditMetadataIncremental').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "PaymentsAudit_Incremental",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "LogStartOfPaymentsAuditTableIncrementalLoad",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@concat('select ',item().ColumnsToInclude,' from ',item().SourceTable,' ', replace(replace(item().WhereClause,'ParamAcademicYear',pipeline().parameters.AcademicYear),'ParamCollectionPeriod',pipeline().parameters.CollectionPeriod))",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureSqlSink",
                                            "preCopyScript": {
                                                "value": "TRUNCATE TABLE @{concat(item().DestSchema,'.',item().DestTable)}",
                                                "type": "Expression"
                                            },
                                            "writeBehavior": "insert",
                                            "sqlWriterUseTableLock": true,
                                            "tableOption": {
                                                "value": "@{item().DestTable}",
                                                "type": "Expression"
                                            },
                                            "disableMetricsCollection": false
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DestPaymentsArchive",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table_Name": "Test"
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": {
                                                    "value": "@item().DestTable",
                                                    "type": "Expression"
                                                },
                                                "Schema": {
                                                    "value": "@item().DestSchema",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "IncrementalLoad_Audit",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "PaymentsAudit_Incremental",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": {
                                            "value": "@item().MergeStoredProcedure",
                                            "type": "Expression"
                                        },
                                        "storedProcedureParameters": {
                                            "AcademicYear": {
                                                "value": {
                                                    "value": "@pipeline().parameters.AcademicYear",
                                                    "type": "Expression"
                                                },
                                                "type": "Int16"
                                            },
                                            "CollectionPeriod": {
                                                "value": {
                                                    "value": "@pipeline().parameters.CollectionPeriod",
                                                    "type": "Expression"
                                                },
                                                "type": "Int16"
                                            },
                                            "RunId": {
                                                "value": {
                                                    "value": "@variables('RunId')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "datamart_stagingDB_linkedservices",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "LogStartOfPaymentsAuditTableIncrementalLoad",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "INSERT INTO Mgmt.Log_Execution_Results\n\t  (\n\t    RunId\n\t   ,StepNo\n\t   ,StoredProcedureName\n\t   ,ADFTaskType\n\t   ,StartDateTime\n\t   ,Execution_Status\n\t  )\n  SELECT \n            @{variables('RunId')}\n\t   ,'Step-5'\n\t   ,'NA'\n\t   ,'Pyaments Audit Table Incremental Load -'+'@{item().SourceTable}'\n\t   ,getdate()\n\t   ,0\nSELECT 'N/A'",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsAuditTableIncrementalLoad",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "IncrementalLoad_Audit",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "DECLARE @LogID int\n\n   SELECT @LogID=MAX(LogId) FROM Mgmt.Log_Execution_Results\n   WHERE ADFTaskType='Payments Audit Table Incremental Load -'+'@{item().SourceTable}'\n     AND RunId=@{variables('RunId')}\n\nUPDATE Mgmt.Log_Execution_Results\n   SET Execution_Status=1\n      ,EndDateTime=getdate()\n\t  ,FullJobStatus='Pending'\n WHERE LogId=@LogID\n   AND RunID=@{variables('RunId')}\n\nSELECT 1",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "DataMart",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Table": "Users",
                                                "Schema": "Stg"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "PaymentsAuditTableIncrementalLoad_fail",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "IncrementalLoad_Audit",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[dbo].[InsertLogErrorDetails]",
                                        "storedProcedureParameters": {
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@{activity('PaymentsAudit_Incremental').Error.message}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "RunId": {
                                                "value": {
                                                    "value": "@variables('RunId')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int32"
                                            },
                                            "TaskType": {
                                                "value": {
                                                    "value": "Payments Audit Table Incremental Load -'+'@{item().SourceTable}",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "datamart_stagingDB_linkedservices",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetRunId",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "GenerateRunId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "SELECT CAST(MAX(RunId) AS VARCHAR(256)) as RunId FROM Mgmt.Log_RunId where PipelineName = 'LoadPaymentsToDataMgmt'",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DataMart",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Table": "DataMart",
                                    "Schema": "DataMart"
                                }
                            }
                        }
                    },
                    {
                        "name": "SetRunId",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GetRunId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "RunId",
                            "value": {
                                "value": "@{activity('GetRunId').output.firstRow.RunId}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "AcademicYear": {
                        "type": "string"
                    },
                    "CollectionPeriod": {
                        "type": "string"
                    }
                },
                "variables": {
                    "RunId": {
                        "type": "String",
                        "defaultValue": "[[StgPmts].[ImportJob]"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2024-10-28T13:59:13Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/datamart_stagingDB_linkedservices')]",
                "[concat(variables('factoryId'), '/datasets/DataMart')]",
                "[concat(variables('factoryId'), '/datasets/SrcPayments')]",
                "[concat(variables('factoryId'), '/datasets/DestPaymentsArchive')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/default/datamart_sql_private_endpoint')]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
            "apiVersion": "2018-06-01",
            "properties": {
                "privateLinkResourceId": "[parameters('datamart_sql_private_endpoint_properties_privateLinkResourceId')]",
                "groupId": "[parameters('datamart_sql_private_endpoint_properties_groupId')]",
                "fqdns": "[parameters('datamart_sql_private_endpoint_properties_fqdns')]"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/default/shared_sql_private_endpoint')]",
            "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
            "apiVersion": "2018-06-01",
            "properties": {
                "privateLinkResourceId": "[parameters('shared_sql_private_endpoint_properties_privateLinkResourceId')]",
                "groupId": "[parameters('shared_sql_private_endpoint_properties_groupId')]",
                "fqdns": "[parameters('shared_sql_private_endpoint_properties_fqdns')]"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
            ]
        }
    ]
}