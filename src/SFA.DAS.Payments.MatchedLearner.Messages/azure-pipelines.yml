name: $(VersionNumberMajor).$(VersionNumberMinor)$(Rev:.rrrr)

parameters:
- name: BuildConfiguration
  displayName: Release or Debug
  type: string
  default: Release
  values:
  - Release
  - Debug

- name: BuildPool
  displayName: 'Build Pool'
  type: string
  default: 'DCT Build Pool'
  values:
  - 'DCT Build Pool'
  - 'DCT'
  
- name: BuildPoolDemand
  displayName: 'Build Pool Demand'
  type: string
  default: 'IsBuildServer'
  values:
  - 'IsBuildServer'
  - 'IsBuildServer_Old'
  - 'IsBuildServer_TEST'
  - 'IsBuildServer_PCTEST'

variables:  
  VersionNumberMajor: '0'
  VersionNumberMinor: '0'

stages:
- stage: Build
  displayName: Build stage
  variables:
    NugetFeed: 'dct-pkg'  
    NugetVersion: '5.8.0'
    DotnetCoreVersion: '2.2.x'
    
  jobs:  
  - job: Build
    displayName: Build
    pool:
      name: ${{ parameters.BuildPool }} 
      demands:
      - ${{ parameters.BuildPoolDemand }} 

    steps:
    - task: UseDotNet@2
      enabled: false
      displayName: 'Use .NET Core sdk : $(DotnetCoreVersion)'
      inputs:
        packageType: sdk
        version: $(DotnetCoreVersion)
        performMultiLevelLookup: true

    - task: NuGetToolInstaller@0
      enabled: false
      displayName: 'Use NuGet : $(NugetVersion)'
      inputs:
        versionSpec: '>= $(NugetVersion)'
        checkLatest: true
        
    - task: DotNetCoreInstaller@0
      enabled: false
      displayName: 'Use .NET Core sdk 2.2.106'
      inputs:
        version: 2.2.106

#********************************************************************************
# Build and Restore
#******************************************************************************** 
    - task: DotNetCoreCLI@2
      displayName: 'Restore MatchedLearner Messages'
      inputs:
        command: restore
        projects: '**/*.MatchedLearner.Messages.csproj'
        configuration: ${{ parameters.BuildConfiguration }}
        feedsToUse: 'select'
        vstsFeed: '$(NugetFeed)'

    - task: DotNetCoreCLI@2
      enabled: false
      displayName: 'Build MatchedLearner Messages'
      inputs:
        projects: '**/*.MatchedLearner.Messages.csproj'
        arguments: '--configuration ${{ parameters.BuildConfiguration }} --no-restore'

#********************************************************************************
# Package 
#********************************************************************************  
    - task: DotNetCoreCLI@2
      displayName: 'Pack MatchedLearner Messages'
      inputs:
        command: pack
        packagesToPack: '**/*.MatchedLearner.Messages.csproj'
        versioningScheme: byBuildNumber
        arguments: '--configuration ${{ parameters.BuildConfiguration }} --output "$(Build.ArtifactStagingDirectory)/NugetPackages" --no-restore'
  
#********************************************************************************
# Copy Nuget Packages into Aftifact Folder
#********************************************************************************   
    - task: CopyFiles@2
      enabled: false
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        Contents: '**/*.nupkg'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/NugetPackages'    

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Packages'
      inputs:
        ArtifactName: NugetPackages
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/NugetPackages'    
