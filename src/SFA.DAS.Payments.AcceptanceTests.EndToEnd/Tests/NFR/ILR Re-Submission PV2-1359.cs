// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.EndToEnd.Tests.Non_LevyLearner_BasicDay
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Non-levy learner continuing 12 months earnings PV2-615")]
    [NUnit.Framework.CategoryAttribute("supports_dc_e2e")]
    public partial class Non_LevyLearnerContinuing12MonthsEarningsPV2_615Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Non-Levy learner continuing 12 months earnings PV2-615.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Non-levy learner continuing 12 months earnings PV2-615", null, ProgrammingLanguage.CSharp, new string[] {
                        "supports_dc_e2e"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Non-levy learner continuing 12 months earnings PV2-615")]
        [NUnit.Framework.TestCaseAttribute("R01/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R02/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R03/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R04/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R05/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R06/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R07/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R08/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R09/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R10/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R11/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R12/Current Academic Year", null)]
        public virtual void Non_LevyLearnerContinuing12MonthsEarningsPV2_615(string collection_Period, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Non-levy learner continuing 12 months earnings PV2-615", null, exampleTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1554 = new TechTalk.SpecFlow.Table(new string[] {
                        "Start Date",
                        "Planned Duration",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Actual Duration",
                        "Completion Status",
                        "Contract Type",
                        "Aim Sequence Number",
                        "Aim Reference",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "SFA Contribution Percentage"});
            table1554.AddRow(new string[] {
                        "03/Aug/Current Academic Year",
                        "12 months",
                        "15000",
                        "03/Aug/Current Academic Year",
                        "",
                        "",
                        "",
                        "continuing",
                        "Act2",
                        "1",
                        "ZPROG001",
                        "593",
                        "1",
                        "20",
                        "19+ Apprenticeship Non-Levy Contract (procured)",
                        "90%"});
#line 5
 testRunner.Given("the provider is providing training for the following learners", ((string)(null)), table1554, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1555 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Episode Id",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Residual Training Price",
                        "Residual Training Price Effective Date",
                        "Residual Assessment Price",
                        "Residual Assessment Price Effective Date",
                        "SFA Contribution Percentage",
                        "Contract Type",
                        "Aim Sequence Number"});
            table1555.AddRow(new string[] {
                        "pe-1",
                        "15000",
                        "06/Aug/Current Academic Year",
                        "0",
                        "06/Aug/Current Academic Year",
                        "0",
                        "",
                        "0",
                        "",
                        "90%",
                        "Act2",
                        "1"});
#line 8
 testRunner.And("price details as follows", ((string)(null)), table1555, "And ");
#line 11
 testRunner.When(string.Format("the ILR file is submitted for the learners for collection period {0}", collection_Period), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1556 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "Price Episode Identifier"});
            table1556.AddRow(new string[] {
                        "Aug/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Sep/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Oct/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Nov/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Dec/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Jan/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Feb/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Mar/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Apr/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "May/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Jun/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
            table1556.AddRow(new string[] {
                        "Jul/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "pe-1"});
#line 12
 testRunner.Then("the following learner earnings should be generated", ((string)(null)), table1556, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1557 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing"});
            table1557.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
            table1557.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "1000",
                        "0",
                        "0"});
#line 26
 testRunner.And("only the following payments will be calculated", ((string)(null)), table1557, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1558 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "Transaction Type"});
            table1558.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1558.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
#line 40
 testRunner.And("only the following provider payments will be recorded", ((string)(null)), table1558, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1559 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "Transaction Type"});
            table1559.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R08/Current Academic Year",
                        "Mar/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R09/Current Academic Year",
                        "Apr/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R10/Current Academic Year",
                        "May/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R11/Current Academic Year",
                        "Jun/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
            table1559.AddRow(new string[] {
                        "R12/Current Academic Year",
                        "Jul/Current Academic Year",
                        "900",
                        "100",
                        "Learning"});
#line 54
 testRunner.And("at month end only the following provider payments will be generated", ((string)(null)), table1559, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
