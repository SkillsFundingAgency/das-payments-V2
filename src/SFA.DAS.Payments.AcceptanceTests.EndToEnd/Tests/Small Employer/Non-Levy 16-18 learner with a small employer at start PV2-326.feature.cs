// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.EndToEnd.Tests.SmallEmployer
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Non-levy learner 16-18 employed with a small employer at start fully funded PV2-3" +
        "26")]
    public partial class Non_LevyLearner16_18EmployedWithASmallEmployerAtStartFullyFundedPV2_326Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Non-Levy 16-18 learner with a small employer at start PV2-326.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Non-levy learner 16-18 employed with a small employer at start fully funded PV2-3" +
                    "26", "\tAs a provider,\r\n\tI want a non-levy learner, 1 learner aged 16-18, employed with " +
                    "a small employer at start, is fully funded for on programme and completion payme" +
                    "nts, to be paid the correct amount\r\n\tSo that I am accurately paid my apprentices" +
                    "hip provision.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Non-levy learner 16-18 employed with a small employer at start fully funded PV2-3" +
            "26")]
        public virtual void Non_LevyLearner16_18EmployedWithASmallEmployerAtStartFullyFundedPV2_326()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Non-levy learner 16-18 employed with a small employer at start fully funded PV2-3" +
                    "26", null, ((string[])(null)));
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Start Date",
                        "Planned Duration",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Actual Duration",
                        "Completion Status",
                        "Contract Type",
                        "Aim Sequence Number",
                        "Aim Reference",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "SFA Contribution Percentage"});
            table1.AddRow(new string[] {
                        "06/Aug/Last Academic Year",
                        "12 months",
                        "7500",
                        "06/Aug/Last Academic Year",
                        "0",
                        "06/Aug/Last Academic Year",
                        "",
                        "continuing",
                        "Act2",
                        "1",
                        "ZPROG001",
                        "403",
                        "1",
                        "25",
                        "16-18 Apprenticeship (From May 2017) Non-Levy Contract (non-procured)",
                        "100%"});
#line 7
 testRunner.Given("the provider previously submitted the following learner details", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "First16To18EmployerIncentive",
                        "First16To18ProviderIncentive",
                        "OnProgramme16To18FrameworkUplift"});
            table2.AddRow(new string[] {
                        "Aug/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Sep/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Oct/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Nov/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "500",
                        "500",
                        "120"});
            table2.AddRow(new string[] {
                        "Dec/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Jan/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Feb/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Mar/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Apr/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "May/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Jun/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
            table2.AddRow(new string[] {
                        "Jul/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "0",
                        "0",
                        "120"});
#line 10
    testRunner.And("the following earnings had been generated for the learner", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table3.AddRow(new string[] {
                        "R01/Last Academic Year",
                        "Aug/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R02/Last Academic Year",
                        "Sep/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R03/Last Academic Year",
                        "Oct/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R04/Last Academic Year",
                        "Nov/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R05/Last Academic Year",
                        "Dec/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R06/Last Academic Year",
                        "Jan/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R07/Last Academic Year",
                        "Feb/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R08/Last Academic Year",
                        "Mar/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R09/Last Academic Year",
                        "Apr/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R10/Last Academic Year",
                        "May/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R11/Last Academic Year",
                        "Jun/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R12/Last Academic Year",
                        "Jul/Last Academic Year",
                        "500",
                        "0",
                        "0",
                        "Learning"});
            table3.AddRow(new string[] {
                        "R01/Last Academic Year",
                        "Aug/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R02/Last Academic Year",
                        "Sep/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R03/Last Academic Year",
                        "Oct/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R04/Last Academic Year",
                        "Nov/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R05/Last Academic Year",
                        "Dec/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R06/Last Academic Year",
                        "Jan/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R07/Last Academic Year",
                        "Feb/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R08/Last Academic Year",
                        "Mar/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R09/Last Academic Year",
                        "Apr/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R10/Last Academic Year",
                        "May/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R11/Last Academic Year",
                        "Jun/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R12/Last Academic Year",
                        "Jul/Last Academic Year",
                        "0",
                        "0",
                        "120",
                        "OnProgramme16To18FrameworkUplift"});
            table3.AddRow(new string[] {
                        "R04/Last Academic Year",
                        "Nov/Last Academic Year",
                        "0",
                        "0",
                        "500",
                        "First16To18EmployerIncentive"});
            table3.AddRow(new string[] {
                        "R04/Last Academic Year",
                        "Nov/Last Academic Year",
                        "0",
                        "0",
                        "500",
                        "First16To18ProviderIncentive"});
#line 24
    testRunner.And("the following provider payments had been generated", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Start Date",
                        "Planned Duration",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Actual Duration",
                        "Completion Status",
                        "Contract Type",
                        "Aim Sequence Number",
                        "Aim Reference",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "SFA Contribution Percentage"});
            table4.AddRow(new string[] {
                        "06/Aug/Last Academic Year",
                        "12 months",
                        "7500",
                        "06/Aug/Last Academic Year",
                        "0",
                        "06/Aug/Last Academic Year",
                        "12 months",
                        "completed",
                        "Act2",
                        "1",
                        "ZPROG001",
                        "403",
                        "1",
                        "25",
                        "16-18 Apprenticeship (From May 2017) Non-Levy Contract (non-procured)",
                        "100%"});
#line 52
    testRunner.But("the Provider now changes the Learner details as follows", ((string)(null)), table4, "But ");
#line 55
 testRunner.When("the amended ILR file is re-submitted for the learners in collection period R01/Cu" +
                    "rrent Academic Year", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "Second16To18EmployerIncentive",
                        "Second16To18ProviderIncentive",
                        "Completion16To18FrameworkUplift"});
            table5.AddRow(new string[] {
                        "Aug/Current Academic Year",
                        "0",
                        "1500",
                        "0",
                        "500",
                        "500",
                        "360"});
            table5.AddRow(new string[] {
                        "Sep/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Oct/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Nov/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Dec/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Jan/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Feb/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Mar/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Apr/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "May/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Jun/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table5.AddRow(new string[] {
                        "Jul/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 56
 testRunner.Then("the following learner earnings should be generated", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "Second16To18EmployerIncentive",
                        "Second16To18ProviderIncentive",
                        "Completion16To18FrameworkUplift"});
            table6.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "1500",
                        "0",
                        "500",
                        "500",
                        "360"});
#line 70
    testRunner.And("only the following payments will be calculated", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table7.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "1500",
                        "0",
                        "0",
                        "Completion"});
            table7.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "500",
                        "Second16To18EmployerIncentive"});
            table7.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "500",
                        "Second16To18ProviderIncentive"});
            table7.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "360",
                        "Completion16To18FrameworkUplift"});
#line 73
 testRunner.And("only the following provider payments will be recorded", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table8.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "1500",
                        "0",
                        "0",
                        "Completion"});
            table8.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "500",
                        "Second16To18EmployerIncentive"});
            table8.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "500",
                        "Second16To18ProviderIncentive"});
            table8.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "360",
                        "Completion16To18FrameworkUplift"});
#line 79
 testRunner.And("at month end only the following provider payments will be generated", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
