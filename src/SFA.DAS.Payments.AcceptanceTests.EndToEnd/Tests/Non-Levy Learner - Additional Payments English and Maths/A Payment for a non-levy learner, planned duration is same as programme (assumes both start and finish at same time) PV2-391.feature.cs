// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.EndToEnd.Tests.Non_LevyLearner_AdditionalPaymentsEnglishAndMaths
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Non-levy learner, requires english or maths at level 2 with prior funding adjustm" +
        "ent after break - COMPLETES ON TIME, RETURNS TO SAME PROVIDER PV2-392")]
    public partial class Non_LevyLearnerRequiresEnglishOrMathsAtLevel2WithPriorFundingAdjustmentAfterBreak_COMPLETESONTIMERETURNSTOSAMEPROVIDERPV2_392Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A Payment for a non-levy learner, planned duration is same as programme (assumes both start and finish at same time) PV2-391.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Non-levy learner, requires english or maths at level 2 with prior funding adjustm" +
                    "ent after break - COMPLETES ON TIME, RETURNS TO SAME PROVIDER PV2-392", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Non-levy learner, requires english or maths at level 2 with prior funding adjustm" +
            "ent after break PV2-392")]
        [NUnit.Framework.TestCaseAttribute("R01/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R02/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R03/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R04/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R05/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R06/Current Academic Year", null)]
        [NUnit.Framework.TestCaseAttribute("R07/Current Academic Year", null)]
        public virtual void Non_LevyLearnerRequiresEnglishOrMathsAtLevel2WithPriorFundingAdjustmentAfterBreakPV2_392(string collection_Period, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Non-levy learner, requires english or maths at level 2 with prior funding adjustm" +
                    "ent after break PV2-392", null, exampleTags);
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Learner Reference Number",
                        "Uln"});
            table1.AddRow(new string[] {
                        "abc123",
                        "12345678"});
#line 11
 testRunner.Given("the following learners", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Aim Type",
                        "Aim Reference",
                        "Start Date",
                        "Planned Duration",
                        "Actual Duration",
                        "Aim Sequence Number",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "Completion Status"});
            table2.AddRow(new string[] {
                        "Maths or English",
                        "12345",
                        "06/Aug/Last Academic Year",
                        "12 months",
                        "5 months",
                        "1",
                        "403",
                        "1",
                        "2",
                        "16-18 Apprenticeship Non-Levy",
                        "planned break"});
            table2.AddRow(new string[] {
                        "Programme",
                        "ZPROG001",
                        "06/Aug/Last Academic Year",
                        "12 months",
                        "5 months",
                        "2",
                        "403",
                        "1",
                        "2",
                        "16-18 Apprenticeship Non-Levy",
                        "planned break"});
#line 15
 testRunner.And("the following aims", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Details",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Contract Type",
                        "Aim Sequence Number",
                        "SFA Contribution Percentage"});
            table3.AddRow(new string[] {
                        "1st price details",
                        "0",
                        "06/Aug/Last Academic Year",
                        "0",
                        "06/Aug/Last Academic Year",
                        "Act2",
                        "1",
                        ""});
            table3.AddRow(new string[] {
                        "2nd price details",
                        "15000",
                        "06/Aug/Last Academic Year",
                        "0",
                        "06/Aug/Last Academic Year",
                        "Act2",
                        "2",
                        "90%"});
#line 19
 testRunner.And("price details as follows", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "OnProgrammeMathsAndEnglish"});
            table4.AddRow(new string[] {
                        "Aug/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Sep/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Oct/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Nov/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Dec/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Jan/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Feb/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Mar/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Apr/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "May/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Jun/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
            table4.AddRow(new string[] {
                        "Jul/Last Academic Year",
                        "1000",
                        "0",
                        "0",
                        "39.25"});
#line 24
    testRunner.And("the following earnings had been generated for the learner", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table5.AddRow(new string[] {
                        "R01/Last Academic Year",
                        "Aug/Last Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table5.AddRow(new string[] {
                        "R02/Last Academic Year",
                        "Sep/Last Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table5.AddRow(new string[] {
                        "R03/Last Academic Year",
                        "Oct/Last Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table5.AddRow(new string[] {
                        "R04/Last Academic Year",
                        "Nov/Last Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table5.AddRow(new string[] {
                        "R05/Last Academic Year",
                        "Dec/Last Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table5.AddRow(new string[] {
                        "R01/Last Academic Year",
                        "Aug/Last Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table5.AddRow(new string[] {
                        "R02/Last Academic Year",
                        "Sep/Last Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table5.AddRow(new string[] {
                        "R03/Last Academic Year",
                        "Oct/Last Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table5.AddRow(new string[] {
                        "R04/Last Academic Year",
                        "Nov/Last Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
            table5.AddRow(new string[] {
                        "R05/Last Academic Year",
                        "Dec/Last Academic Year",
                        "0",
                        "0",
                        "39.25",
                        "OnProgrammeMathsAndEnglish"});
#line 38
    testRunner.And("the following provider payments had been generated", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Aim Type",
                        "Aim Reference",
                        "Start Date",
                        "Planned Duration",
                        "Actual Duration",
                        "Aim Sequence Number",
                        "Framework Code",
                        "Pathway Code",
                        "Programme Type",
                        "Funding Line Type",
                        "Completion Status"});
            table6.AddRow(new string[] {
                        "Maths or English",
                        "12345",
                        "06/Aug/Current Academic Year",
                        "7 months",
                        "",
                        "1",
                        "403",
                        "1",
                        "2",
                        "16-18 Apprenticeship Non-Levy",
                        "continuing"});
            table6.AddRow(new string[] {
                        "Programme",
                        "ZPROG001",
                        "06/Aug/Current Academic Year",
                        "7 months",
                        "",
                        "2",
                        "403",
                        "1",
                        "2",
                        "16-18 Apprenticeship Non-Levy",
                        "continuing"});
#line 51
    testRunner.But("aims details are changed as follows", ((string)(null)), table6, "But ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Price Details",
                        "Total Training Price",
                        "Total Training Price Effective Date",
                        "Total Assessment Price",
                        "Total Assessment Price Effective Date",
                        "Contract Type",
                        "Aim Sequence Number",
                        "SFA Contribution Percentage"});
            table7.AddRow(new string[] {
                        "3rd price details",
                        "0",
                        "06/Aug/Last Academic Year",
                        "0",
                        "06/Aug/Last Academic Year",
                        "Act2",
                        "1",
                        ""});
            table7.AddRow(new string[] {
                        "4th price details",
                        "15000",
                        "06/Aug/Last Academic Year",
                        "0",
                        "06/Aug/Last Academic Year",
                        "Act2",
                        "2",
                        "90%"});
#line 57
 testRunner.And("price details are changed as follows", ((string)(null)), table7, "And ");
#line 61
 testRunner.When(string.Format("the amended ILR file is re-submitted for the learners in collection period {0}", collection_Period), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "OnProgrammeMathsAndEnglish"});
            table8.AddRow(new string[] {
                        "Aug/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table8.AddRow(new string[] {
                        "Sep/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table8.AddRow(new string[] {
                        "Oct/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table8.AddRow(new string[] {
                        "Nov/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table8.AddRow(new string[] {
                        "Dec/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table8.AddRow(new string[] {
                        "Jan/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table8.AddRow(new string[] {
                        "Feb/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table8.AddRow(new string[] {
                        "Mar/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "Apr/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "May/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "Jun/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0"});
            table8.AddRow(new string[] {
                        "Jul/Current Academic Year",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 63
    testRunner.Then("the following learner earnings should be generated", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "On-Programme",
                        "Completion",
                        "Balancing",
                        "OnProgrammeMathsAndEnglish"});
            table9.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table9.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table9.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table9.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table9.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table9.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
            table9.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "1000",
                        "0",
                        "0",
                        "28.26"});
#line 77
    testRunner.And("only the following payments will be calculated", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table10.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table10.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table10.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table10.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table10.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table10.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table10.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table10.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table10.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table10.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table10.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table10.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table10.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table10.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
#line 87
    testRunner.And("only the following provider payments will be recorded", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Collection Period",
                        "Delivery Period",
                        "SFA Co-Funded Payments",
                        "Employer Co-Funded Payments",
                        "SFA Fully-Funded Payments",
                        "Transaction Type"});
            table11.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table11.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table11.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table11.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table11.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table11.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table11.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "900",
                        "100",
                        "0",
                        "Learning"});
            table11.AddRow(new string[] {
                        "R01/Current Academic Year",
                        "Aug/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table11.AddRow(new string[] {
                        "R02/Current Academic Year",
                        "Sep/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table11.AddRow(new string[] {
                        "R03/Current Academic Year",
                        "Oct/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table11.AddRow(new string[] {
                        "R04/Current Academic Year",
                        "Nov/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table11.AddRow(new string[] {
                        "R05/Current Academic Year",
                        "Dec/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table11.AddRow(new string[] {
                        "R06/Current Academic Year",
                        "Jan/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
            table11.AddRow(new string[] {
                        "R07/Current Academic Year",
                        "Feb/Current Academic Year",
                        "0",
                        "0",
                        "28.26",
                        "OnProgrammeMathsAndEnglish"});
#line 103
 testRunner.And("at month end only the following provider payments will be generated", ((string)(null)), table11, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
